import org.springframework.boot.gradle.tasks.bundling.BootJar

import java.text.SimpleDateFormat

plugins {
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

tasks.register('buildWithNeo4j', BootJar.class) {

	dependsOn 'clean', 'build'
	project.ext.set('springProfiles', 'Neo4j')
	mainClass.set("de.sni.demo.DemoApplication")
	setTargetJavaVersion(JavaVersion.VERSION_17)
}

tasks.register('buildWithMongoDB', BootJar.class) {

	dependsOn 'clean', 'build'
	project.ext.set('springProfiles', 'MongoDB')
	mainClass.set("de.sni.demo.DemoApplication")
	setTargetJavaVersion(JavaVersion.VERSION_17)
}

group = 'de.sni'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.5")
}

dependencies {
	implementation(project(':businesslogic'))
	implementation(project(':api'))
	implementation(project(':database-mongodb'))
	implementation(project(':database-neo4j'))
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'

//	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}